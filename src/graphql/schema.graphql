type User {
  id: ID!
  name: String!
  email: String!
  status: String
  role: String
  registrationDate: String
  phone: String
  country: String
}

input PaginationInput {
  page: Int
  pageSize: Int
}

input UserFilters {
  email: String
  role: String
  status: String
}

input SortInput {
  field: String
  order: String
}

type Metadata {
  total: Int!
  page: Int!
  pageSize: Int!
}

type UsersResponse {
  data: [User!]!
  metadata: Metadata!
}

type Query {
  users(
    pagination: PaginationInput
    filters: UserFilters
    sort: SortInput
  ): UsersResponse!
}

input EditUserInput {
  name: String
  email: String
  phone: String
  country: String
  role: String
  status: String
}

type Mutation {
  createUser(
    name: String!
    email: String!
    phone: String!
    country: String!
    role: String!
    status: String!
  ): User!
  deleteUser(id: ID!): Boolean!
  editUserRole(id: ID!, role: String!): User!
  editUser(id: ID!, input: EditUserInput!): User!
}
